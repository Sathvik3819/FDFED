<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
        }

        body {
            min-height: 100vh;
            background: linear-gradient(135deg, #F1FAFF 0%, #CBE4FF 100%);
            color: #2c3e50;
            overflow: hidden;
        }

        .container {
            display: flex;
            height: 100vh;
        }

        .main-content {
            flex: 1;
            margin-left: 286px;
            padding: 24px;
            transition: margin-left 0.4s ease;
            display: flex;
            flex-direction: column;
            height: 100vh;
            overflow: hidden;
        }

        /* Header Section */
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 20px 28px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 8px 32px rgba(21, 26, 45, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.3);
            flex-shrink: 0;
        }

        .header-left {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .menu-toggle {
            display: none;
            cursor: pointer;
            font-size: 1.5rem;
            color: #151A2D;
            padding: 8px;
            border-radius: 8px;
            transition: background 0.3s ease;
        }

        .menu-toggle:hover {
            background: rgba(21, 26, 45, 0.05);
        }

        .header h1 {
            font-size: 1.75rem;
            font-weight: 600;
            color: #151A2D;
            margin: 0;
            line-height: 1.2;
        }

        .form-wrapper {
            flex: 1;
            overflow: hidden;
            display: flex;
            gap: 20px;
        }

        .form-column {
            flex: 1;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 24px;
            box-shadow: 0 8px 32px rgba(21, 26, 45, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.3);
            display: flex;
            flex-direction: column;
        }

        .section-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #151A2D;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
            padding-bottom: 12px;
            border-bottom: 2px solid #e5e7eb;
        }

        .section-title i {
            color: #dc2626;
        }

        .profile-image-container {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    background-color: #f8f9fa;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0 auto 20px;
    overflow: hidden;
    border: 3px solid #dc2626;
    position: relative;
    transition: all 0.3s ease;
    flex-shrink: 0;
    cursor: pointer;
}

.profile-image-container:hover {
    transform: scale(1.05);
    border-color: #b91c1c;
}

.profile-image-container:hover::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
}

.profile-image-container:hover::before {
    content: '\F30F';
    font-family: 'bootstrap-icons';
    position: absolute;
    color: white;
    font-size: 2rem;
    z-index: 1;
}

.profile-image-container > i {
    font-size: 3rem;
    color: #6b7280;
}

.profile-image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.upload-btn {
    display: none;
} 
        .form-content {
            flex: 1;
            overflow-y: auto;
            padding-right: 8px;
        }

        .form-content::-webkit-scrollbar {
            width: 6px;
        }

        .form-content::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .form-content::-webkit-scrollbar-thumb {
            background: #dc2626;
            border-radius: 10px;
        }

        .form-group {
            margin-bottom: 18px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #2c3e50;
            font-size: 0.9rem;
        }

        .form-control {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            background: #ffffff;
            color: #2c3e50;
        }

        .form-control::placeholder {
            color: #9ca3af;
        }

        .form-control:focus {
            outline: none;
            border-color: #dc2626;
            box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
        }

        .btn-submit {
            background-color: #dc2626;
            color: white;
            padding: 10px 20px;
            border-radius: 10px;
            font-weight: 500;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-size: 0.95rem;
            width: 100%;
            justify-content: center;
            margin-top: 8px;
        }

        .btn-submit:hover {
            background-color: #b91c1c;
            transform: translateY(-2px);
        }

        .btn-submit:active {
            transform: translateY(0);
        }

        .rule-box {
            background: #f8fafc;
            padding: 16px;
            border-radius: 12px;
            margin-bottom: 16px;
            border: 1px solid #e5e7eb;
        }

        .rule-box h6 {
            color: #2c3e50;
            font-weight: 600;
            margin-bottom: 12px;
            font-size: 0.95rem;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .rule-box ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .rule-box li {
            color: #4b5563;
            padding: 6px 0;
            padding-left: 24px;
            position: relative;
            line-height: 1.5;
            font-size: 0.85rem;
        }

        .rule-box li::before {
            content: "âœ“";
            position: absolute;
            left: 0;
            color: #16a34a;
            font-weight: bold;
            font-size: 1rem;
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .form-wrapper {
                flex-direction: column;
                overflow-y: auto;
            }

            .form-column {
                flex: none;
            }
        }

        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
                padding: 16px;
            }

            .header h1 {
                font-size: 1.5rem;
            }

            .menu-toggle {
                display: block;
            }

            .profile-image-container {
                width: 100px;
                height: 100px;
            }
        }

        /* Smooth animations */
        * {
            transition: background 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
        }
    </style>
</head>
<body>
    <div class="container">
      
         <%- include('../partials/sidebarAdmin') %> 

        <!-- Main Content -->
        <div class="main-content">
            <div class="header">
                <div class="header-left">
                    <span class="menu-toggle" id="menu-toggle">
                        <i class="fas fa-bars"></i>
                    </span>
                    <h1>Profile Management</h1>
                </div>
            </div>

            <!-- Combined Profile Content -->
            <div class="form-wrapper">
                <!-- Profile Information Column -->
                <div class="form-column">
                    <h2 class="section-title">
                        <i class="bi bi-person-fill"></i>Profile Information
                    </h2>
                    
                    <form id="profileForm" enctype="multipart/form-data">
                       
                        <div class="form-content">
                            <div class="form-group">
                                <label for="firstName">First Name</label>
                                <input type="text" class="form-control" id="firstName" value="<%= admin.name %>" name="name" placeholder="Enter your first name"/>
                            </div>

                            <div class="form-group">
                                <label for="email">Email Address</label>
                                <input type="email" class="form-control" id="email" value="<%= admin.email %>" name="email" placeholder="Enter your email address"/>
                            </div>


                            <button type="submit" class="btn-submit">
                                <i class="bi bi-save"></i>Save Changes
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Change Password Column -->
                <div class="form-column">
                    <h2 class="section-title">
                        <i class="bi bi-shield-lock"></i>Change Password
                    </h2>
                    
                    <form id="passwordForm">
                        <div class="form-content">
                            <div class="form-group">
                                <label for="currentPassword">Current Password</label>
                                <input type="password" class="form-control" id="currentPassword" name="cp" placeholder="Enter current password"/>
                            </div>

                            <div class="form-group">
                                <label for="newPassword">New Password</label>
                                <input type="password" class="form-control" id="newPassword" name="np" placeholder="Enter new password"/>
                            </div>

                            <div class="form-group">
                                <label for="confirmPassword">Confirm Password</label>
                                <input type="password" class="form-control" id="confirmPassword" name="cnp" placeholder="Confirm new password"/>
                            </div>

                            <div class="rule-box">
                                <h6><i class="bi bi-shield-check"></i>Password Requirements</h6>
                                <ul>
                                    <li>Minimum 8 characters long</li>
                                    <li>At least one uppercase and one lowercase letter</li>
                                    <li>At least one number or special character</li>
                                    <li>Not similar to your personal information</li>
                                </ul>
                            </div>

                            <button type="submit" class="btn-submit">
                                <i class="bi bi-key"></i>Update Password
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <script>// Replace the existing script section with this improved version

// Global variable to store selected file
let selectedFile = null;

// Image preview handler
document.getElementById('image')?.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
        // Validate file type
        if (!file.type.startsWith('image/')) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid File',
                text: 'Please select an image file',
                confirmButtonColor: '#dc2626'
            });
            return;
        }

        // Validate file size (5MB max)
        if (file.size > 5 * 1024 * 1024) {
            Swal.fire({
                icon: 'error',
                title: 'File Too Large',
                text: 'Image size should be less than 5MB',
                confirmButtonColor: '#dc2626'
            });
            return;
        }

        selectedFile = file;
        
        const reader = new FileReader();
        reader.onload = function(e) {
            const container = document.querySelector('.profile-image-container');
            container.innerHTML = `<img src="${e.target.result}" style="width: 100%; height: 100%; object-fit: cover;">`;
        }
        reader.readAsDataURL(file);
    }
});

// Profile Form Submission
document.getElementById('profileForm')?.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData();
    
    // Get form values
    const name = document.getElementById('firstName').value.trim();
    const email = document.getElementById('email').value.trim();
    
    // Validate fields
    if (!name || !email) {
        Swal.fire({
            icon: 'warning',
            title: 'Missing Fields',
            text: 'Please fill in all required fields',
            confirmButtonColor: '#dc2626'
        });
        return;
    }

    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Email',
            text: 'Please enter a valid email address',
            confirmButtonColor: '#dc2626'
        });
        return;
    }

    // Append form data
    formData.append('name', name);
    formData.append('email', email);
    
    // Append image if selected
    if (selectedFile) {
        formData.append('image', selectedFile);
        console.log('Image attached:', selectedFile.name);
    }

    // Show loading
    Swal.fire({
        title: 'Updating Profile...',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });

    try {
        const response = await fetch('/admin/profile/update', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: data.message || 'Profile updated successfully',
                confirmButtonColor: '#dc2626'
            }).then(() => {
                // Update displayed image if new one was uploaded
                if (data.admin && data.admin.image) {
                    const container = document.querySelector('.profile-image-container');
                    container.innerHTML = `<img src="${data.admin.image}" style="width: 100%; height: 100%; object-fit: cover;">`;
                }
                selectedFile = null;
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: data.message || 'Failed to update profile',
                confirmButtonColor: '#dc2626'
            });
        }
    } catch (error) {
        console.error('Profile update error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'Something went wrong. Please try again.',
            confirmButtonColor: '#dc2626'
        });
    }
});

// Password Strength Checker
function checkPasswordStrength(password) {
    let strength = 0;
    const feedback = [];

    if (password.length >= 8) {
        strength += 25;
    } else {
        feedback.push('At least 8 characters');
    }

    if (/[a-z]/.test(password) && /[A-Z]/.test(password)) {
        strength += 25;
    } else {
        feedback.push('Mix of uppercase and lowercase');
    }

    if (/\d/.test(password)) {
        strength += 25;
    } else {
        feedback.push('At least one number');
    }

    if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
        strength += 25;
    } else {
        feedback.push('At least one special character');
    }

    return { strength, feedback };
}

// Real-time password validation
const newPasswordInput = document.getElementById('newPassword');
newPasswordInput?.addEventListener('input', function() {
    const { strength, feedback } = checkPasswordStrength(this.value);
    
    if (this.value.length > 0) {
        if (strength < 50) {
            this.style.borderColor = '#dc2626';
        } else if (strength < 75) {
            this.style.borderColor = '#f59e0b';
        } else {
            this.style.borderColor = '#16a34a';
        }
    } else {
        this.style.borderColor = '#e5e7eb';
    }
});

// Password Form Submission
document.getElementById('passwordForm')?.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    // Validation
    if (!currentPassword || !newPassword || !confirmPassword) {
        Swal.fire({
            icon: 'warning',
            title: 'Missing Fields',
            text: 'Please fill in all password fields',
            confirmButtonColor: '#dc2626'
        });
        return;
    }

    if (newPassword !== confirmPassword) {
        Swal.fire({
            icon: 'error',
            title: 'Passwords Don\'t Match',
            text: 'New password and confirm password must match',
            confirmButtonColor: '#dc2626'
        });
        return;
    }

    const { strength, feedback } = checkPasswordStrength(newPassword);
    if (strength < 75) {
        Swal.fire({
            icon: 'warning',
            title: 'Weak Password',
            html: `Your password needs improvement:<br><ul style="text-align: left; margin-top: 10px;">${feedback.map(f => `<li>${f}</li>`).join('')}</ul>`,
            confirmButtonColor: '#dc2626'
        });
        return;
    }

    if (currentPassword === newPassword) {
        Swal.fire({
            icon: 'warning',
            title: 'Same Password',
            text: 'New password must be different from current password',
            confirmButtonColor: '#dc2626'
        });
        return;
    }

    Swal.fire({
        title: 'Updating Password...',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });

    try {
        const response = await fetch('/admin/profile/change-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                currentPassword,
                newPassword
            })
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: data.message || 'Password changed successfully',
                confirmButtonColor: '#dc2626'
            }).then(() => {
                document.getElementById('passwordForm').reset();
                document.getElementById('newPassword').style.borderColor = '#e5e7eb';
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: data.message || 'Failed to change password',
                confirmButtonColor: '#dc2626'
            });
        }
    } catch (error) {
        console.error('Password change error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'Something went wrong. Please try again.',
            confirmButtonColor: '#dc2626'
        });
    }
});</script>
</body>
</html>