<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Community Management</title>
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        /* Importing Google Fonts - Poppins */
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
        }

        body {
            min-height: 100vh;
            background: linear-gradient(135deg, #F1FAFF 0%, #CBE4FF 100%);
            color: #2c3e50;
        }

        /* Container Layout */
        .container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            position: fixed;
            width: 270px;
            margin: 16px;
            border-radius: 16px;
            background: #151A2D;
            height: calc(100vh - 32px);
            transition: all 0.4s ease;
            z-index: 1000;
        }

        .sidebar.collapsed {
            width: 85px;
        }

        .sidebar .sidebar-header {
            display: flex;
            position: relative;
            padding: 25px 20px;
            align-items: center;
            justify-content: space-between;
        }

        .sidebar-header .header-logo img {
            height: 30px;
            padding-left: 10px;
            display: block;
            object-fit: contain;
        }

        .sidebar-header .toggler {
            height: 35px;
            width: 35px;
            color: #151A2D;
            border: none;
            cursor: pointer;
            display: flex;
            background: #fff;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            transition: 0.4s ease;
        }

        .sidebar-header .sidebar-toggler {
            position: absolute;
            right: 20px;
        }

        .sidebar-header .menu-toggler {
            display: none;
        }

        .sidebar.collapsed .sidebar-header .toggler {
            transform: translate(-4px, 65px);
        }

        .sidebar-header .toggler:hover {
            background: #dde4fb;
        }

        .sidebar-header .toggler span {
            font-size: 1.75rem;
            transition: 0.4s ease;
        }

        .sidebar.collapsed .sidebar-header .toggler span {
            transform: rotate(180deg);
        }

        .sidebar-nav .nav-list {
            list-style: none;
            display: flex;
            gap: 4px;
            padding: 0 15px;
            flex-direction: column;
            transform: translateY(15px);
            transition: 0.4s ease;
        }

        .sidebar.collapsed .sidebar-nav .primary-nav {
            transform: translateY(65px);
        }

        .sidebar-nav .nav-link {
            color: #fff;
            display: flex;
            gap: 12px;
            white-space: nowrap;
            border-radius: 8px;
            padding: 12px 15px;
            align-items: center;
            text-decoration: none;
            transition: 0.4s ease;
        }

        .sidebar.collapsed .sidebar-nav .nav-link {
            border-radius: 12px;
        }

        .sidebar .sidebar-nav .nav-link .nav-label {
            transition: opacity 0.3s ease;
        }

        .sidebar.collapsed .sidebar-nav .nav-link .nav-label {
            opacity: 0;
            pointer-events: none;
        }

        .sidebar-nav .nav-link:hover {
            color: #151A2D;
            background: #fff;
        }

        .sidebar-nav .nav-link.active {
            color: #151A2D;
            background: #fff;
        }

        /* Mock nav items for demonstration */
        .nav-link {
            margin-bottom: 8px;
        }

        .nav-icon {
            min-width: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 286px;
            padding: 24px;
            transition: margin-left 0.4s ease;
            min-width: 0; /* Prevents flex item from overflowing */
        }

        .sidebar.collapsed ~ .main-content {
            margin-left: 101px;
        }

        /* Header Section */
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 20px 32px;
            margin-bottom: 24px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 8px 32px rgba(21, 26, 45, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .header-left {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .menu-toggle {
            display: none;
            background: #151A2D;
            color: white;
            border: none;
            padding: 12px;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .menu-toggle:hover {
            background: #2c3441;
            transform: translateY(-2px);
        }

        .header h1 {
            font-size: 2rem;
            font-weight: 600;
            color: #151A2D;
            margin: 0;
        }

        .header-subtitle {
            color: #6b7280;
            font-size: 0.95rem;
            margin-top: 4px;
        }

        .header-actions {
            display: flex;
            gap: 12px;
            align-items: center;
        }

        .notification-bell {
            position: relative;
            background: rgba(255, 255, 255, 0.8);
            border: 2px solid rgba(21, 26, 45, 0.1);
            border-radius: 12px;
            padding: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .notification-bell:hover {
            background: white;
            transform: translateY(-2px);
        }

        .notification-badge {
            position: absolute;
            top: -4px;
            right: -4px;
            background: #ef4444;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: 600;
        }

        /* KPI Cards */
        .kpi-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 32px;
        }

        .kpi-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 8px 32px rgba(21, 26, 45, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.3);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .kpi-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 40px rgba(21, 26, 45, 0.12);
        }

        .kpi-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--accent-color);
        }

        .kpi-card.communities::before {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        }

        .kpi-card.residents::before {
            background: linear-gradient(135deg, #10b981, #047857);
        }

        .kpi-card.applications::before {
            background: linear-gradient(135deg, #f59e0b, #d97706);
        }

        .kpi-card.revenue::before {
            background: linear-gradient(135deg, #8b5cf6, #7c3aed);
        }

        .kpi-card.managers::before {
            background: linear-gradient(135deg, #06b6d4, #0891b2);
        }

        .kpi-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 16px;
        }

        .kpi-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 24px;
        }

        .kpi-card.communities .kpi-icon {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        }

        .kpi-card.residents .kpi-icon {
            background: linear-gradient(135deg, #10b981, #047857);
        }

        .kpi-card.applications .kpi-icon {
            background: linear-gradient(135deg, #f59e0b, #d97706);
        }

        .kpi-card.revenue .kpi-icon {
            background: linear-gradient(135deg, #8b5cf6, #7c3aed);
        }

        .kpi-card.managers .kpi-icon {
            background: linear-gradient(135deg, #06b6d4, #0891b2);
        }

        .kpi-title {
            font-size: 0.875rem;
            font-weight: 500;
            color: #6b7280;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .kpi-value {
            font-size: 2.25rem;
            font-weight: 700;
            color: #151A2D;
            margin-bottom: 8px;
        }

        .kpi-change {
            display: flex;
            align-items: center;
            gap: 4px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .kpi-change.positive {
            color: #10b981;
        }

        .kpi-change.negative {
            color: #ef4444;
        }

        /* Charts Section */
        .charts-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 24px;
            margin-bottom: 32px;
        }

        .chart-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 8px 32px rgba(21, 26, 45, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.3);
            min-height: 400px;
        }

        .chart-card.wide {
            grid-column: 1 / -1;
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
            flex-wrap: wrap;
            gap: 12px;
        }

        .chart-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #151A2D;
        }

        .chart-filter {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 6px 12px;
            border: 1px solid rgba(21, 26, 45, 0.2);
            background: transparent;
            border-radius: 6px;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .filter-btn.active,
        .filter-btn:hover {
            background: #151A2D;
            color: white;
            border-color: #151A2D;
        }

        .chart-container {
            position: relative;
            height: 300px;
        }

        /* Applications Overview Specific Styles */
        .applications-overview {
            display: grid;
            grid-template-columns: 1fr;
            gap: 24px;
            height: 100%;
        }

        .applications-summary {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 16px;
            margin-bottom: 24px;
        }

        .summary-item {
            text-align: center;
            background: rgba(248, 250, 252, 0.6);
            padding: 16px;
            border-radius: 12px;
        }

        .summary-value {
            font-size: 1.75rem;
            font-weight: 700;
            color: #151A2D;
            margin-bottom: 4px;
        }

        .summary-label {
            font-size: 0.75rem;
            color: #6b7280;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .applications-charts {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
            min-height: 300px;
        }

        .trend-chart-container {
            background: rgba(248, 250, 252, 0.6);
            border-radius: 12px;
            padding: 16px;
            position: relative;
        }

        .status-chart-container {
            background: rgba(248, 250, 252, 0.6);
            border-radius: 12px;
            padding: 16px;
            display: flex;
            flex-direction: column;
        }

        .doughnut-wrapper {
            position: relative;
            height: 200px;
            margin-bottom: 16px;
        }

        .status-summary {
            font-size: 0.875rem;
            color: #6b7280;
        }

        .status-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
            padding: 4px 0;
        }

        .status-color {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            margin-right: 8px;
        }

        .status-label {
            display: flex;
            align-items: center;
            font-size: 0.875rem;
            color: #374151;
        }

        .status-value {
            font-weight: 600;
            color: #151A2D;
        }

        /* Notifications Section */
        .notifications-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 24px;
        }

        .notification-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 8px 32px rgba(21, 26, 45, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .notification-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .notification-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #151A2D;
        }

        .view-all-btn {
            color: #3b82f6;
            text-decoration: none;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .view-all-btn:hover {
            text-decoration: underline;
        }

        .notification-list {
            display: flex;
            flex-direction: column;
            gap: 16px;
        }

        .notification-item {
            display: flex;
            gap: 12px;
            padding: 12px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .notification-item:hover {
            background: rgba(21, 26, 45, 0.04);
        }

        .notification-icon {
            width: 36px;
            height: 36px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 18px;
            flex-shrink: 0;
        }

        .notification-icon.performance { background: #10b981; }
        .notification-icon.manager { background: #3b82f6; }
        .notification-icon.system { background: #6366f1; }
        .notification-icon.financial { background: #8b5cf6; }
        .notification-icon.policy { background: #f59e0b; }
        .notification-icon.alert { background: #ef4444; }

        .notification-content {
            flex: 1;
            min-width: 0;
        }

        .notification-text {
            font-size: 0.875rem;
            color: #374151;
            margin-bottom: 4px;
            word-wrap: break-word;
        }

        .notification-time {
            font-size: 0.75rem;
            color: #9ca3af;
        }

        .notification-meta {
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 8px;
        }

        .priority-badge {
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 500;
            white-space: nowrap;
        }

        .priority-high {
            background: rgba(239, 68, 68, 0.1);
            color: #dc2626;
        }

        .priority-medium {
            background: rgba(245, 158, 11, 0.1);
            color: #d97706;
        }

        .priority-low {
            background: rgba(34, 197, 94, 0.1);
            color: #16a34a;
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .charts-grid {
                grid-template-columns: 1fr;
            }
            
            .applications-charts {
                grid-template-columns: 1fr;
                gap: 16px;
            }
            
            .kpi-grid {
                grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            }
        }

        @media (max-width: 1024px) {
            .sidebar {
                transform: translateX(-100%);
                height: auto;
                margin: 0;
                border-radius: 0;
                width: 280px;
                top: 0;
                left: 0;
                z-index: 1001;
            }

            .sidebar.menu-active {
                transform: translateX(0);
            }

            .sidebar .sidebar-header {
                position: sticky;
                top: 0;
                z-index: 20;
                border-radius: 0;
                background: #151A2D;
                padding: 16px 20px;
            }

            .sidebar-header .sidebar-toggler {
                display: none;
            }

            .sidebar-header .menu-toggler {
                display: flex;
                height: 30px;
                width: 30px;
            }

            .sidebar-header .menu-toggler span {
                font-size: 1.3rem;
            }

            .main-content {
                margin-left: 0;
                padding: 16px;
            }

            .menu-toggle {
                display: flex;
            }

            .header {
                padding: 16px 20px;
            }

            .header h1 {
                font-size: 1.5rem;
            }

            .kpi-grid {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 16px;
            }

            .notifications-grid {
                grid-template-columns: 1fr;
            }

            .applications-summary {
                grid-template-columns: repeat(2, 1fr);
                gap: 12px;
            }
        }

        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                align-items: flex-start;
                gap: 16px;
                padding: 16px;
            }

            .header-left {
                width: 100%;
            }

            .header-actions {
                align-self: flex-end;
            }

            .kpi-grid {
                grid-template-columns: 1fr;
                gap: 16px;
            }

            .chart-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 12px;
            }

            .applications-summary {
                grid-template-columns: 1fr;
                gap: 12px;
            }

            .notifications-grid {
                grid-template-columns: 1fr;
                gap: 16px;
            }

            .notification-meta {
                flex-direction: column;
                align-items: flex-start;
                gap: 8px;
            }
        }

        @media (max-width: 480px) {
            .main-content {
                padding: 12px;
            }

            .header {
                padding: 12px;
                margin-bottom: 16px;
            }

            .header h1 {
                font-size: 1.25rem;
            }

            .chart-card {
                padding: 16px;
            }

            .kpi-card {
                padding: 16px;
            }

            .notification-card {
                padding: 16px;
            }

            .kpi-value {
                font-size: 1.75rem;
            }

            .summary-value {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
     <%- include('../partials/sidebarAdmin') %>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <div class="header">
            <div class="header-left">
                <button class="menu-toggle" id="mobileMenuToggle">
                    <span class="material-symbols-rounded">menu</span>
                </button>
                <div>
                    <h1>Dashboard Overview</h1>
                    <div class="header-subtitle">Welcome back, Admin! Here's what's happening across all communities.</div>
                </div>
            </div>
            <div class="header-actions">
                <div class="notification-bell">
                    <span class="material-symbols-rounded">notifications</span>
                    <div class="notification-badge">5</div>
                </div>
            </div>
        </div>

        <!-- KPI Cards -->
        <div class="kpi-grid">
            <div class="kpi-card communities">
                <div class="kpi-header">
                    <div class="kpi-icon">
                        <span class="material-symbols-rounded">apartment</span>
                    </div>
                    <div class="kpi-title">Total Communities</div>
                </div>
                <div class="kpi-value">42</div>
                <div class="kpi-change positive">
                    <span class="material-symbols-rounded">trending_up</span>
                    +3 this month
                </div>
            </div>

            <div class="kpi-card residents">
                <div class="kpi-header">
                    <div class="kpi-icon">
                        <span class="material-symbols-rounded">groups</span>
                    </div>
                    <div class="kpi-title">Total Residents</div>
                </div>
                <div class="kpi-value">1,847</div>
                <div class="kpi-change positive">
                    <span class="material-symbols-rounded">trending_up</span>
                    +12.5% vs last month
                </div>
            </div>

            <div class="kpi-card applications">
                <div class="kpi-header">
                    <div class="kpi-icon">
                        <span class="material-symbols-rounded">pending_actions</span>
                    </div>
                    <div class="kpi-title">Pending Applications</div>
                </div>
                <div class="kpi-value">156</div>
                <div class="kpi-change negative">
                    <span class="material-symbols-rounded">trending_down</span>
                    -12 this week
                </div>
            </div>

            <div class="kpi-card revenue">
                <div class="kpi-header">
                    <div class="kpi-icon">
                        <span class="material-symbols-rounded">account_balance_wallet</span>
                    </div>
                    <div class="kpi-title">Monthly Revenue</div>
                </div>
                <div class="kpi-value">₹24.8L</div>
                <div class="kpi-change positive">
                    <span class="material-symbols-rounded">trending_up</span>
                    +18% vs last month
                </div>
            </div>

          
        </div>

        <!-- Charts Section -->
        <div class="charts-grid">
            <div class="chart-card">
                <div class="chart-header">
                    <div class="chart-title">Portfolio Growth & Revenue</div>
                    <div class="chart-filter">
                        <button class="filter-btn active">6M</button>
                        <button class="filter-btn">1Y</button>
                        <button class="filter-btn">All</button>
                    </div>
                </div>
                <div class="chart-container">
                    <canvas id="growthChart"></canvas>
                </div>
            </div>

            <div class="chart-card">
                <div class="chart-header">
                    <div class="chart-title">Applications Overview</div>
                </div>
                <div class="applications-overview">
                    <div class="applications-summary">
                        <div class="summary-item">
                            <div class="summary-value">324</div>
                            <div class="summary-label">This Month</div>
                        </div>
                        <div class="summary-item">
                            <div class="summary-value">156</div>
                            <div class="summary-label">Pending</div>
                        </div>
                        <div class="summary-item">
                            <div class="summary-value">142</div>
                            <div class="summary-label">Approved</div>
                        </div>
                        <div class="summary-item">
                            <div class="summary-value">26</div>
                            <div class="summary-label">Rejected</div>
                        </div>
                    </div>
                    
                    <div class="applications-charts">
                        <div class="trend-chart-container">
                            <canvas id="applicationsTrendChart"></canvas>
                        </div>
                        <div class="status-chart-container">
                            <div class="doughnut-wrapper">
                                <canvas id="applicationsStatusChart"></canvas>
                            </div>
                            <div class="status-summary">
                                <div class="status-item">
                                    <div class="status-label">
                                        <div class="status-color" style="background: #10b981;"></div>
                                        Approved
                                    </div>
                                    <div class="status-value">142</div>
                                </div>
                                <div class="status-item">
                                    <div class="status-label">
                                        <div class="status-color" style="background: #f59e0b;"></div>
                                        Pending
                                    </div>
                                    <div class="status-value">156</div>
                                </div>
                                <div class="status-item">
                                    <div class="status-label">
                                        <div class="status-color" style="background: #ef4444;"></div>
                                        Rejected
                                    </div>
                                    <div class="status-value">26</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Notifications Section -->
        <div class="notifications-grid">
            <div class="notification-card">
                <div class="notification-header">
                    <div class="notification-title">System Alerts</div>
                    <a href="#" class="view-all-btn">View All</a>
                </div>
                <div class="notification-list">
                    <div class="notification-item">
                        <div class="notification-icon performance">
                            <span class="material-symbols-rounded">trending_up</span>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">5 communities exceeded 95% occupancy rate this month</div>
                            <div class="notification-meta">
                                <div class="notification-time">2 hours ago</div>
                                <div class="priority-badge priority-low">Info</div>
                            </div>
                        </div>
                    </div>

                    <div class="notification-item">
                        <div class="notification-icon alert">
                            <span class="material-symbols-rounded">warning</span>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">3 communities have payment collection rates below 85%</div>
                            <div class="notification-meta">
                                <div class="notification-time">4 hours ago</div>
                                <div class="priority-badge priority-high">High</div>
                            </div>
                        </div>
                    </div>

                    <div class="notification-item">
                        <div class="notification-icon manager">
                            <span class="material-symbols-rounded">person_off</span>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">Manager resignation submitted for Greenpark Community</div>
                            <div class="notification-meta">
                                <div class="notification-time">6 hours ago</div>
                                <div class="priority-badge priority-high">High</div>
                            </div>
                        </div>
                    </div>

                    <div class="notification-item">
                        <div class="notification-icon system">
                            <span class="material-symbols-rounded">update</span>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">System maintenance scheduled across all communities tonight</div>
                            <div class="notification-meta">
                                <div class="notification-time">8 hours ago</div>
                                <div class="priority-badge priority-medium">Medium</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="notification-card">
                <div class="notification-header">
                    <div class="notification-title">Action Required</div>
                    <a href="#" class="view-all-btn">View All</a>
                </div>
                <div class="notification-list">
                    <div class="notification-item">
                        <div class="notification-icon financial">
                            <span class="material-symbols-rounded">analytics</span>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">Q4 financial reports pending review from 8 communities</div>
                            <div class="notification-meta">
                                <div class="notification-time">1 hour ago</div>
                                <div class="priority-badge priority-high">High</div>
                            </div>
                        </div>
                    </div>

                    <div class="notification-item">
                        <div class="notification-icon policy">
                            <span class="material-symbols-rounded">gavel</span>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">New community policies awaiting admin approval</div>
                            <div class="notification-meta">
                                <div class="notification-time">3 hours ago</div>
                                <div class="priority-badge priority-medium">Medium</div>
                            </div>
                        </div>
                    </div>

                    <div class="notification-item">
                        <div class="notification-icon manager">
                            <span class="material-symbols-rounded">person_add</span>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">Interview candidates shortlisted for 2 manager positions</div>
                            <div class="notification-meta">
                                <div class="notification-time">5 hours ago</div>
                                <div class="priority-badge priority-medium">Medium</div>
                            </div>
                        </div>
                    </div>

                    <div class="notification-item">
                        <div class="notification-icon performance">
                            <span class="material-symbols-rounded">trending_down</span>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">Monthly performance review for underperforming communities</div>
                            <div class="notification-meta">
                                <div class="notification-time">1 day ago</div>
                                <div class="priority-badge priority-low">Low</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

   <script>// Configuration
const API_BASE_URL = window.location.origin + '/admin/api';

// Global variables for charts
let growthChart;
let applicationsStatusChart;

// DOM elements
const elements = {
    // KPI Values
    totalCommunities: document.querySelector('.kpi-card.communities .kpi-value'),
    totalResidents: document.querySelector('.kpi-card.residents .kpi-value'),
    pendingApplications: document.querySelector('.kpi-card.applications .kpi-value'),
    monthlyRevenue: document.querySelector('.kpi-card.revenue .kpi-value'),
    activeManagers: document.querySelector('.kpi-card.managers .kpi-value'),
    
    // KPI Changes
    communitiesChange: document.querySelector('.kpi-card.communities .kpi-change'),
    residentsChange: document.querySelector('.kpi-card.residents .kpi-change'),
    applicationsChange: document.querySelector('.kpi-card.applications .kpi-change'),
    revenueChange: document.querySelector('.kpi-card.revenue .kpi-change'),
    managersChange: document.querySelector('.kpi-card.managers .kpi-change'),
    
    // Application Summary
    monthlyApplications: document.querySelectorAll('.summary-item .summary-value')[0],
    pendingCount: document.querySelectorAll('.summary-item .summary-value')[1],
    approvedCount: document.querySelectorAll('.summary-item .summary-value')[2],
    rejectedCount: document.querySelectorAll('.summary-item .summary-value')[3],
    
    // Notification badge
    notificationBadge: document.querySelector('.notification-badge'),
    
    // Notification lists
    systemAlertsList: document.querySelectorAll('.notification-list')[0],
    actionRequiredList: document.querySelectorAll('.notification-list')[1]
};

// Utility functions
function formatCurrency(value) {
    return `₹${value}`;
}

function formatChange(change, type, period) {
    const prefix = change > 0 ? '+' : '';
    const suffix = type.includes('percentage') ? '%' : '';
    const icon = change > 0 ? 'trending_up' : 'trending_down';
    const className = change > 0 ? 'positive' : 'negative';
    
    return {
        text: `${prefix}${change}${suffix} ${type.includes('percentage') ? 'vs' : 'this'} ${period}`,
        icon: icon,
        className: className
    };
}

function createNotificationElement(notification) {
    const notificationItem = document.createElement('div');
    notificationItem.className = 'notification-item';
    notificationItem.innerHTML = `
        <div class="notification-icon ${notification.type}">
            <span class="material-symbols-rounded">${notification.icon}</span>
        </div>
        <div class="notification-content">
            <div class="notification-text">${notification.message}</div>
            <div class="notification-meta">
                <div class="notification-time">${notification.time}</div>
                <div class="priority-badge priority-${notification.priority}">${notification.priorityLabel}</div>
            </div>
        </div>
    `;
    return notificationItem;
}

function showLoading() {
    document.body.classList.add('loading');
}

function hideLoading() {
    document.body.classList.remove('loading');
}

function showError(message) {
    console.error('Dashboard Error:', message);
    // You can implement a toast notification here
    const errorDiv = document.createElement('div');
    errorDiv.className = 'error-message';
    errorDiv.textContent = `Error: ${message}`;
    errorDiv.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #ef4444;
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        z-index: 10000;
        animation: slideIn 0.3s ease;
    `;
    document.body.appendChild(errorDiv);
    setTimeout(() => errorDiv.remove(), 5000);
}

// API functions
async function fetchDashboardData() {
    try {
        const response = await fetch(`${API_BASE_URL}/dashboard`);
        if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        const result = await response.json();
        return result.data;
    } catch (error) {
        console.error('Failed to fetch dashboard data:', error);
        throw error;
    }
}

async function fetchChartData(period = '6M') {
    try {
        const response = await fetch(`${API_BASE_URL}/dashboard/charts?period=${period}`);
        if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        const result = await response.json();
        return result.data;
    } catch (error) {
        console.error('Failed to fetch chart data:', error);
        throw error;
    }
}

async function fetchNotifications() {
    try {
        const response = await fetch(`${API_BASE_URL}/notifications`);
        if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        const result = await response.json();
        return result.data;
    } catch (error) {
        console.error('Failed to fetch notifications:', error);
        throw error;
    }
}

// Update functions
function updateKPIs(data) {
    const { kpis, trends={} } = data;
    
    // Update values
    if (elements.totalCommunities) elements.totalCommunities.textContent = kpis.totalCommunities;
    if (elements.totalResidents) elements.totalResidents.textContent = kpis.totalResidents.toLocaleString();
    if (elements.pendingApplications) elements.pendingApplications.textContent = kpis.pendingApplications;
    if (elements.monthlyRevenue) elements.monthlyRevenue.textContent = formatCurrency(kpis.monthlyRevenue);
    if (elements.activeManagers) elements.activeManagers.textContent = kpis.activeManagers;
    
    // Update changes
    const changeElements = [
        { element: elements.communitiesChange, trend: trends.communities },
        { element: elements.residentsChange, trend: trends.residents },
        { element: elements.applicationsChange, trend: trends.applications },
        { element: elements.revenueChange, trend: trends.revenue },
        { element: elements.managersChange, trend: trends.managers }
    ];
    
    changeElements.forEach(({ element, trend }) => {
        if (element && trend) {
            const changeInfo = formatChange(trend.change, trend.type, trend.period);
            const icon = element.querySelector('.material-symbols-rounded');
            const textNode = element.childNodes[element.childNodes.length - 1];
            
            if (icon) icon.textContent = changeInfo.icon;
            if (textNode) textNode.textContent = changeInfo.text;
            
            element.className = `kpi-change ${changeInfo.className}`;
        }
    });
}

function updateApplicationsSummary(data) {
    const { applicationsStatus } = data;
    const total = applicationsStatus.approved + applicationsStatus.pending + applicationsStatus.rejected;
    
    if (elements.monthlyApplications) elements.monthlyApplications.textContent = total;
    if (elements.pendingCount) elements.pendingCount.textContent = applicationsStatus.pending;
    if (elements.approvedCount) elements.approvedCount.textContent = applicationsStatus.approved;
    if (elements.rejectedCount) elements.rejectedCount.textContent = applicationsStatus.rejected;
    
    // Update status summary in doughnut chart section
    const statusItems = document.querySelectorAll('.status-item .status-value');
    if (statusItems.length >= 3) {
        statusItems[0].textContent = applicationsStatus.approved;
        statusItems[1].textContent = applicationsStatus.pending;
        statusItems[2].textContent = applicationsStatus.rejected;
    }
}

function updateNotifications(data) {
    const { total, systemAlerts, actionRequired } = data;
    
    // Update notification badge
    if (elements.notificationBadge) {
        elements.notificationBadge.textContent = Math.min(total, 99); // Cap at 99
    }
    
    // Update system alerts
    if (elements.systemAlertsList) {
        elements.systemAlertsList.innerHTML = '';
        systemAlerts.forEach(notification => {
            elements.systemAlertsList.appendChild(createNotificationElement(notification));
        });
    }
    
    // Update action required
    if (elements.actionRequiredList) {
        elements.actionRequiredList.innerHTML = '';
        actionRequired.forEach(notification => {
            elements.actionRequiredList.appendChild(createNotificationElement(notification));
        });
    }
}

function updateCharts(data) {
    updateGrowthChart(data.growthChart);
    updateApplicationsStatusChart(data.applicationsStatus);
}

function updateGrowthChart(data) {
  if (!data || !data.growthChart) return;
  const { labels = [], communities = [], revenue = [] } = data.growthChart;
    const ctx = document.getElementById('growthChart');
    if (!ctx) return;
    
    // Destroy existing chart
    if (growthChart) {
        growthChart.destroy();
    }
    
    growthChart = new Chart(ctx.getContext('2d'), {
        type: 'line',
        data: {
            labels: data.labels,
            datasets: [{
                label: 'New Communities',
                data: data.communities,
                borderColor: '#3b82f6',
                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                borderWidth: 3,
                fill: true,
                tension: 0.4
            }, {
                label: 'Revenue (₹L)',
                data: data.revenue,
                borderColor: '#10b981',
                backgroundColor: 'rgba(16, 185, 129, 0.1)',
                borderWidth: 3,
                fill: true,
                tension: 0.4
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top',
                    labels: {
                        usePointStyle: true,
                        padding: 20
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        color: 'rgba(21, 26, 45, 0.05)'
                    }
                },
                x: {
                    grid: {
                        display: false
                    }
                }
            },
            elements: {
                point: {
                    radius: 6,
                    hoverRadius: 8
                }
            }
        }
    });
}

function updateApplicationsStatusChart(data) {
    const ctx = document.getElementById('applicationsStatusChart');
    if (!ctx) return;
    
    // Destroy existing chart
    if (applicationsStatusChart) {
        applicationsStatusChart.destroy();
    }
    
    applicationsStatusChart = new Chart(ctx.getContext('2d'), {
        type: 'doughnut',
        data: {
            labels: ['Approved', 'Pending', 'Rejected'],
            datasets: [{
                data: [data.approved, data.pending, data.rejected],
                backgroundColor: [
                    '#10b981',
                    '#f59e0b',
                    '#ef4444'
                ],
                borderWidth: 0,
                cutout: '65%'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                }
            }
        }
    });
}

// Event handlers
function handleChartFilterClick(period) {
    showLoading();
    fetchChartData(period)
        .then(data => {
            updateCharts(data);
            hideLoading();
        })
        .catch(error => {
            hideLoading();
            showError('Failed to update charts');
        });
}

// Initialize dashboard
async function initializeDashboard() {
    showLoading();
    
    try {
        // Fetch all data in parallel
        const [dashboardData, notifications] = await Promise.all([
            fetchDashboardData(),
            fetchNotifications()
        ]);
        
        // Update UI
        updateKPIs(dashboardData);
        updateApplicationsSummary(dashboardData.chartData);
        updateCharts(dashboardData.chartData);
        updateNotifications(notifications);
        
        console.log('Dashboard initialized successfully');
        
    } catch (error) {
        showError('Failed to load dashboard data');
        console.error('Dashboard initialization error:', error);
    } finally {
        hideLoading();
    }
}

// Auto-refresh functionality
function startAutoRefresh() {
    setInterval(async () => {
        try {
            const notifications = await fetchNotifications();
            updateNotifications(notifications);
        } catch (error) {
            console.error('Auto-refresh error:', error);
        }
    }, 30000); // Refresh every 30 seconds
}

// DOM Content Loaded
document.addEventListener('DOMContentLoaded', () => {
    // Initialize dashboard
    initializeDashboard();
    
    // Start auto-refresh
    startAutoRefresh();
    
    // Sidebar functionality
    const sidebar = document.getElementById('sidebar');
    const sidebarToggler = document.getElementById('sidebarToggler');
    const menuToggler = document.getElementById('menuToggler');
    const mobileMenuToggle = document.getElementById('mobileMenuToggle');

    // Desktop sidebar toggle
    if (sidebarToggler) {
        sidebarToggler.addEventListener('click', () => {
            sidebar.classList.toggle('collapsed');
        });
    }

    // Mobile menu toggle
    const mobileTogglers = [menuToggler, mobileMenuToggle].filter(Boolean);
    mobileTogglers.forEach(toggler => {
        toggler.addEventListener('click', () => {
            sidebar.classList.toggle('menu-active');
            const icon = toggler.querySelector('span');
            if (icon) {
                icon.textContent = sidebar.classList.contains('menu-active') ? 'close' : 'menu';
            }
        });
    });

    // Close mobile menu on outside click
    document.addEventListener('click', (e) => {
        if (window.innerWidth <= 1024 && 
            !sidebar.contains(e.target) && 
            !mobileTogglers.some(toggler => toggler && toggler.contains(e.target))) {
            sidebar.classList.remove('menu-active');
            mobileTogglers.forEach(toggler => {
                const icon = toggler && toggler.querySelector('span');
                if (icon) icon.textContent = 'menu';
            });
        }
    });

    // Chart filter buttons
    const filterBtns = document.querySelectorAll('.filter-btn');
    filterBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            filterBtns.forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            handleChartFilterClick(this.textContent);
        });
    });

    // Responsive handling
    window.addEventListener("resize", () => {
        if (window.innerWidth >= 1024) {
            sidebar.classList.remove("menu-active");
            mobileTogglers.forEach(toggler => {
                const icon = toggler && toggler.querySelector('span');
                if (icon) icon.textContent = 'menu';
            });
        }
    });

    // Add animation to KPI cards
    const kpiCards = document.querySelectorAll('.kpi-card');
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    });

    kpiCards.forEach((card) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        card.style.transition = 'all 0.6s ease';
        observer.observe(card);
    });
});

// Loading styles (add to CSS)
const loadingStyles = `
    .loading {
        cursor: wait;
    }
    
    .loading .kpi-value,
    .loading .chart-container {
        opacity: 0.6;
        pointer-events: none;
    }
    
    .error-message {
        animation: slideIn 0.3s ease;
    }
    
    @keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
`;

// Inject loading styles
const styleSheet = document.createElement('style');
styleSheet.textContent = loadingStyles;
document.head.appendChild(styleSheet);

// Export functions for external use
window.dashboardAPI = {
    refresh: initializeDashboard,
    updateCharts: handleChartFilterClick,
    fetchDashboardData,
    fetchNotifications
};</script>
</body>
</html>