<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Community Management Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="../../css/nav.css" />

    <style>
      .activity-entry {
        border-left: 4px solid var(--primary);
        background-color: var(--primary-light);
        border-radius: 0 var(--border-radius) var(--border-radius) 0;
        position: relative;
        padding: 15px 20px;
        margin-bottom: 20px;
        transition: var(--transition);
      }

      .activity-entry:hover {
        background-color: #d8e8ff;
        transform: translateX(5px);
      }

      .activity-entry::before {
        content: "";
        position: absolute;
        width: 16px;
        height: 16px;
        border-radius: 50%;
        background: var(--primary);
        border: 3px solid white;
        left: -10px;
        top: 20px;
      }

      .add-member-section {
        background: linear-gradient(135deg, #fff8f5, #fff0e8);
        border: 2px solid var(--secondary);
        border-radius: var(--border-radius);
        font-size: 1.25rem;
        padding: 20px;
        font-weight: 600;
        color: #e65100;
        display: flex;
        align-items: center;
        gap: 15px;
        transition: var(--transition);
        cursor: pointer;
        margin-bottom: 30px;
      }

      .add-member-section:hover {
        background: linear-gradient(135deg, #fff0e8, #ffe8e0);
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(255, 107, 53, 0.2);
      }

      .add-member-section i {
        background: var(--secondary);
        color: white;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
      }

      .section-title {
        position: relative;
        padding-bottom: 15px;
        margin-bottom: 25px;
        border-bottom: 2px solid #e9ecef;
      }

      .section-title::after {
        content: "";
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 120px;
        height: 3px;
        background: linear-gradient(90deg, var(--primary), var(--secondary));
        border-radius: 3px;
      }

      .card-value {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 10px 0;
        letter-spacing: -1px;
      }

      .card-label {
        color: var(--gray);
        font-size: 1.1rem;
        font-weight: 500;
      }

      .stats-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        margin-bottom: 30px;
      }

      .activity-grid {
        display: grid;
        grid-template-columns: 3fr 1fr;
        gap: 30px;
      }

      .activity-container {
        background: white;
        border-radius: var(--border-radius);
        padding: 25px;
        box-shadow: var(--shadow);
      }

      .activity-title {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 25px;
      }

      .activity-title h2 {
        font-size: 1.8rem;
        color: var(--primary);
        margin: 0;
      }

      /* Card Styles */
      .cards-container {
        margin-bottom: 2rem;
        padding: 1.5rem;
        background: #fff;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        border: 1px solid #eaeaea;
        transition: var(--transition);
      }

      .cards-container:hover {
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
      }

      .card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 20px;
      }

      .info-card {
        background-color: var(--light);
        border: 1px solid #e0e0e0;
        border-radius: var(--border-radius);
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        transition: var(--transition);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }

      .info-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
      }

      .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
      }

      .card-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 5px;
      }

      .card-id {
        font-size: 0.9rem;
        color: var(--gray);
      }

      .card-body p {
        margin-bottom: 8px;
        font-size: 0.95rem;
        color: var(--dark);
      }

      .card-body p strong {
        color: var(--primary);
      }

      .card-actions {
        margin-top: 15px;
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
      }

      /* Tabs */
      .tab-btn {
        margin-right: 0.5rem;
        padding: 8px 16px;
        border-radius: 30px;
        transition: var(--transition);
        border: 2px solid var(--primary);
        background: transparent;
        color: var(--primary);
        font-weight: 500;
      }

      .tab-btn.active {
        background-color: var(--primary);
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(13, 110, 253, 0.3);
      }

      .tab-btn:hover:not(.active) {
        background-color: rgba(13, 110, 253, 0.1);
      }

      .tabs {
        margin-bottom: 1.5rem;
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
      }

      /* Popup Styles */
      .popup {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        backdrop-filter: blur(5px);
        background-color: rgba(0, 0, 0, 0.4);
        justify-content: center;
        align-items: center;
        z-index: 2000;
      }

      .popup-content {
        background: white;
        padding: 30px;
        width: 450px;
        max-height: 90vh;
        overflow-y: auto;
        border-radius: var(--border-radius);
        position: relative;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        animation: popupFadeIn 0.3s ease-out;
      }

      @keyframes popupFadeIn {
        from {
          opacity: 0;
          transform: translateY(-20px);
        }

        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .form-group {
        margin-bottom: 18px;
      }

      .form-group label {
        display: block;
        margin-bottom: 6px;
        font-weight: 500;
        color: var(--dark);
      }

      .form-group input,
      .form-group select,
      .form-group textarea {
        width: 100%;
        padding: 12px;
        margin-top: 5px;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-size: 15px;
        transition: var(--transition);
      }

      .form-group input:focus,
      .form-group select:focus,
      .form-group textarea:focus {
        border-color: var(--primary);
        outline: none;
        box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.2);
      }

      .form-button {
        background-color: var(--success);
        color: white;
        border: none;
        padding: 12px 20px;
        cursor: pointer;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 500;
        transition: var(--transition);
        width: 100%;
        margin-top: 15px;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 8px;
      }

      .form-button:hover {
        background-color: #157347;
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(25, 135, 84, 0.3);
      }

      .close-btn {
        position: absolute;
        top: 15px;
        right: 20px;
        font-size: 28px;
        color: var(--danger);
        cursor: pointer;
        transition: var(--transition);
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
      }

      .close-btn:hover {
        color: #bd2130;
        background-color: rgba(220, 53, 69, 0.1);
        transform: rotate(90deg);
      }

      .form-title {
        text-align: center;
        margin-bottom: 25px;
        color: var(--primary);
        font-weight: 600;
        position: relative;
        padding-bottom: 15px;
      }

      .form-title::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 4px;
        background: linear-gradient(90deg, var(--primary), var(--secondary));
        border-radius: 4px;
      }

      @media (max-width: 992px) {
        .stats-grid {
          grid-template-columns: repeat(2, 1fr);
        }

        .activity-grid {
          grid-template-columns: 1fr;
        }

        .bodyContainer {
          grid-template-columns: 1fr;
        }

        .adCon {
          height: auto;
          position: relative;
          top: 0;
          margin-bottom: 20px;
        }

        .ad-text {
          transform: rotate(0);
          padding: 30px;
        }

        .card-grid {
          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        }
      }

      @media (max-width: 768px) {
        .stats-grid {
          grid-template-columns: 1fr;
        }

        nav ul {
          gap: 10px !important;
          flex-wrap: wrap;
          justify-content: center;
        }

        .tabs {
          flex-direction: column;
          align-items: stretch;
        }

        .tab-btn {
          width: 100%;
          margin-right: 0;
        }

        .popup-content {
          width: 95%;
          padding: 20px;
        }
      }

      .badge-entry {
        position: absolute;
        right: 15px;
        top: 15px;
        font-size: 0.8rem;
        padding: 5px 10px;
        border-radius: 20px;
      }

      .entry-in {
        background: #d1e7dd;
        color: var(--success);
      }

      .entry-out {
        background: #f8d7da;
        color: var(--danger);
      }

      .entry-time {
        font-size: 0.9rem;
        color: var(--gray);
        margin-top: 5px;
      }

      .action-btn {
        padding: 8px 15px;
        border-radius: 8px;
        font-size: 14px;
        transition: var(--transition);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 5px;
        cursor: pointer;
        text-decoration: none;
        /* Ensure no underline for anchor tags if used */
      }

      .action-btn.edit {
        background-color: var(--warning);
        color: var(--dark);
        border: none;
      }

      .action-btn.delete {
        background-color: var(--danger);
        color: white;
        border: none;
      }

      .action-btn:hover {
        opacity: 0.9;
        transform: translateY(-2px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      }
    </style>
  </head>

  <body>
    <%- include('../../partials/managerNav.ejs') %>

    <div class="bodyContainer">
      <div class="adCon d-flex justify-content-center align-items-center">
        <div class="advertisement" id="ad-slider">
          <% if (locals.ads && ads.filter(ad => ad.status==="active").length > 0) { %> <% ads.filter(ad => ad.status==="active").forEach(ad => { %>
          <img
            src="http://localhost:3000/<%= ad.imagePath.replace(/\\/g, '/') %>"
            class="ad-slide"
            alt="Ad"
            height="100px"
            width="200px"
          />
          <% }) %> <% } else { %>
          <div
            class="d-flex justify-content-center align-items-center"
            style="
              background-color: rgba(158, 207, 250, 0.539);
              border-radius: 8px;
              color: rgb(0, 80, 193);
              border: 3px dotted blue;
              height: 100%;
              width: 100%;
            "
          >
            <p class="ad-text fs-4" style="font-weight: 600">Advertisement</p>
          </div>
          <% } %>
        </div>
      </div>

      <div class="contentCon">
        <div class="tabs mb-4">
          <button class="btn tab-btn active" onclick="showTab('residents')">
            <i class="bi bi-people me-2"></i>Residents
          </button>
          <button class="btn tab-btn" onclick="showTab('security')">
            <i class="bi bi-shield-shaded me-2"></i>Security
          </button>
          <button class="btn tab-btn" onclick="showTab('workers')">
            <i class="bi bi-tools me-2"></i>Workers
          </button>
        </div>

        <div id="residents" class="cards-container">
          <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="section-title">Residents</h4>
            <button class="btn btn-success" id="addResidentBtn">
              <i class="bi bi-plus-lg me-2"></i>Add Resident
            </button>
          </div>
          <div class="card-grid" id="residentCardGrid">
            <% if (locals.R && R.length > 0) { %> <% R.forEach(r => { %>
            <div class="info-card" data-id="<%= r._id %>">
              <div class="card-header">
                <div class="card-title">
                  <%= r.residentFirstname %> <%= r.residentLastname %>
                </div>
                <span class="card-id"
                  >#<%= r._id.toString().substring(0, 8) %></span
                >
              </div>
              <div class="card-body">
                <p><strong>Email:</strong> <%= r.email %></p>
                <p><strong>Block:</strong> <%= r.blockNo %></p>
                <p><strong>Flat:</strong> <%= r.flatNo %></p>
                <p><strong>Contact:</strong> <%= r.contact %></p>
              </div>
              <div class="card-actions">
                <button
                  class="action-btn resident-edit edit"
                  data-id="<%= r._id %>"
                >
                  <i class="bi bi-pencil"></i>Edit
                </button>
                <button
                  class="action-btn resident-delete delete"
                  data-id="<%= r._id %>"
                >
                  <i class="bi bi-trash"></i>Delete
                </button>
              </div>
            </div>
            <% }) %> <% } else { %>
            <p class="text-muted">No residents found.</p>
            <% } %>
          </div>
        </div>

        <div id="security" class="cards-container" style="display: none">
          <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="section-title">Security Personnel</h4>
            <button class="btn btn-success" id="addSecurityBtn">
              <i class="bi bi-plus-lg me-2"></i>Add Security
            </button>
          </div>
          <div class="card-grid" id="securityCardGrid">
            <% if (locals.S && S.length > 0) { %> <% S.forEach(s => { %>
            <div class="info-card" data-id="<%= s._id %>">
              <div class="card-header">
                <div class="card-title"><%= s.name %></div>
                <span class="card-id"
                  >#<%= s._id.toString().substring(0, 8) %></span
                >
              </div>
              <div class="card-body">
                <p><strong>Email:</strong> <%= s.email %></p>
                <p><strong>Contact:</strong> <%= s.contact %></p>
                <p>
                  <strong>Shift:</strong> <%= s.Shift %> shift at <%=
                  s.workplace %>
                </p>
                <p>
                  <strong>Joining Date:</strong> <%= new
                  Date(s.joiningDate).toLocaleDateString('en-GB') %>
                </p>
              </div>
              <div class="card-actions">
                <button
                  class="action-btn security-edit edit"
                  data-id="<%= s._id %>"
                >
                  <i class="bi bi-pencil"></i>Edit
                </button>
                <button
                  class="action-btn security-delete delete"
                  data-id="<%= s._id %>"
                >
                  <i class="bi bi-trash"></i>Delete
                </button>
              </div>
            </div>
            <% }) %> <% } else { %>
            <p class="text-muted">No security personnel found.</p>
            <% } %>
          </div>
        </div>

        <div id="workers" class="cards-container" style="display: none">
          <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="section-title">Workers</h4>
            <button class="btn btn-success" id="addWorkerBtn">
              <i class="bi bi-plus-lg me-2"></i>Add Worker
            </button>
          </div>
          <div class="card-grid" id="workerCardGrid">
            <% if (locals.W && W.length > 0) { %> <% W.forEach(w => { %>
            <div class="info-card" data-id="<%= w._id %>">
              <div class="card-header">
                <div class="card-title"><%= w.name %></div>
                <span class="card-id"
                  >#<%= w._id.toString().substring(0, 8) %></span
                >
              </div>
              <div class="card-body">
                <p><strong>Email:</strong> <%= w.email %></p>
                <p><strong>Job Role:</strong> <%= w.jobRole %></p>
                <p><strong>Contact:</strong> <%= w.contact %></p>
                <p><strong>Status:</strong> <%= w.availabilityStatus %></p>
              </div>
              <div class="card-actions">
                <button
                  class="action-btn worker-edit edit"
                  data-id="<%= w._id %>"
                >
                  <i class="bi bi-pencil"></i>Edit
                </button>
                <button
                  class="action-btn worker-delete delete"
                  data-id="<%= w._id %>"
                >
                  <i class="bi bi-trash"></i>Delete
                </button>
              </div>
            </div>
            <% }) %> <% } else { %>
            <p class="text-muted">No workers found.</p>
            <% } %>
          </div>
        </div>
      </div>
    </div>

    <div id="residentFormPopup" class="popup">
      <div class="popup-content">
        <span class="close-btn" onclick="closeForm('resident')">&times;</span>
        <h3 class="form-title">Add Resident</h3>
        <form
          id="residentForm"
          action="/manager/userManagement/resident"
          method="POST"
        >
          <input type="text" id="Rid" name="Rid" value="" hidden />
          <div class="form-group">
            <label for="residentFirstname">First Name:</label>
            <input
              type="text"
              id="residentFirstname"
              name="residentFirstname"
              placeholder="Enter first name"
              required
            />
          </div>

          <div class="form-group">
            <label for="residentLastname">Last Name:</label>
            <input
              type="text"
              id="residentLastname"
              name="residentLastname"
              placeholder="Enter last name"
              required
            />
          </div>

          <div class="form-group">
            <label for="residentEmail">Email:</label>
            <input
              type="email"
              id="residentEmail"
              name="email"
              placeholder="Enter email"
              required
            />
          </div>

          <div class="form-group">
            <label for="residentBlock">Block:</label>
            <input
              type="text"
              id="residentBlock"
              name="blockNo"
              placeholder="Block name"
              required
            />
          </div>

          <div class="form-group">
            <label for="houseNumber">House Number:</label>
            <input
              type="text"
              id="houseNumber"
              name="flatNo"
              placeholder="House number"
              required
            />
          </div>

          <div class="form-group">
            <label for="residentContact">Contact:</label>
            <input
              type="tel"
              id="residentContact"
              name="contact"
              placeholder="Enter phone number"
              required
            />
          </div>

          <button type="submit" class="form-button">
            <i class="bi bi-check-circle"></i>Submit
          </button>
        </form>
      </div>
    </div>

    <div id="securityFormPopup" class="popup">
      <div class="popup-content">
        <span class="close-btn" onclick="closeForm('security')">&times;</span>
        <h3 class="form-title">Add Security</h3>
        <form
          id="securityForm"
          action="/manager/userManagement/security"
          method="POST"
        >
          <input type="text" id="Sid" name="Sid" value="" />

          <div class="form-group">
            <label for="securityName">Full Name:</label>
            <input
              type="text"
              id="securityName"
              name="name"
              placeholder="Enter full name"
              required
            />
          </div>

          <div class="form-group">
            <label for="securityEmail">Email:</label>
            <input
              type="email"
              id="securityEmail"
              name="email"
              placeholder="Enter email"
              required
            />
          </div>

          <div class="form-group">
            <label for="securityContact">Contact:</label>
            <input
              type="tel"
              id="securityContact"
              name="contact"
              placeholder="Enter phone number"
              required
              pattern="[0-9]{10}"
            />
            <small>Format: 10-digit number</small>
          </div>

          <div class="form-group">
            <label for="securityAddress">Address:</label>
            <textarea
              id="securityAddress"
              name="address"
              placeholder="Enter full address"
              required
              rows="3"
            ></textarea>
          </div>

          <div class="form-group">
            <label for="securityShift">Shift:</label>
            <select id="securityShift" name="Shift" required>
              <option value="">Select Shift</option>
              <option value="Day">Day Shift</option>
              <option value="Night">Night Shift</option>
            </select>
          </div>

          <div class="form-group">
            <label for="gate">Gate :</label>
            <input id="gate" name="gate" placeholder="Ex : Gate A" required />
          </div>

          <button type="submit" class="form-button">
            <i class="bi bi-check-circle"></i>Submit
          </button>
        </form>
      </div>
    </div>

    <div id="workerFormPopup" class="popup">
      <div class="popup-content">
        <span class="close-btn" onclick="closeForm('worker')">&times;</span>
        <h3 class="form-title">Add Worker</h3>
        <form
          id="workerForm"
          action="/manager/userManagement/worker"
          method="POST"
        >
          <input type="text" id="Wid" name="Wid" value="" />

          <div class="form-group">
            <label for="workerName">Full Name:</label>
            <input
              type="text"
              id="workerName"
              name="name"
              placeholder="Enter full name"
              required
            />
          </div>

          <div class="form-group">
            <label for="workerEmail">Email:</label>
            <input
              type="email"
              id="workerEmail"
              name="email"
              placeholder="Enter email"
              required
            />
          </div>

          <div class="form-group">
            <label for="workerJobRole">Job Role:</label>
            <input
              type="text"
              id="workerJobRole"
              name="jobRole"
              placeholder="e.g., Plumber, Electrician, Cleaner"
              required
            />
          </div>

          <div class="form-group">
            <label for="workerContact">Contact:</label>
            <input
              type="tel"
              id="workerContact"
              name="contact"
              placeholder="Enter phone number"
              required
            />
          </div>

          <div class="form-group">
            <label for="workerAddress">Address:</label>
            <textarea
              id="workerAddress"
              name="address"
              placeholder="Enter full address"
              required
              rows="3"
            ></textarea>
          </div>

          <div class="form-group">
            <label for="workerSalary">Monthly Salary (₹):</label>
            <input
              type="number"
              id="workerSalary"
              name="salary"
              placeholder="Enter monthly salary"
              required
              min="0"
            />
          </div>

          <div class="form-group">
            <label for="workerAvailabilityStatus">Availability Status:</label>
            <select
              id="workerAvailabilityStatus"
              name="availabilityStatus"
              required
            >
              <option value="Available">Available</option>
              <option value="Busy">Busy</option>
              <option value="On Leave">On Leave</option>
            </select>
          </div>

          <button type="submit" class="form-button">
            <i class="bi bi-check-circle"></i>Submit
          </button>
        </form>
      </div>
    </div>

    <script>
      // Open the form popup
      function openForm(formType, data = {}) {
        let formPopupId;
        let formTitle;
        let formAction;
        let formId;

        if (formType === "resident") {
          formPopupId = "residentFormPopup";
          formTitle = "Add Resident";
          formAction = "/manager/userManagement/resident";
          formId = "residentForm";
          if (data._id) {
            formTitle = "Edit Resident";
            document.getElementById("Rid").value = data._id;
            document.getElementById("residentFirstname").value =
              data.residentFirstname || "";
            document.getElementById("residentLastname").value =
              data.residentLastname || "";
            document.getElementById("residentEmail").value = data.email || "";
            document.getElementById("residentBlock").value = data.blockNo || "";
            document.getElementById("houseNumber").value = data.flatNo || "";
            document.getElementById("residentContact").value =
              data.contact || "";
          } else {
            document.getElementById("Rid").value = "";
            document.getElementById("residentForm").reset();
          }
        } else if (formType === "security") {
          formPopupId = "securityFormPopup";
          formTitle = "Add Security";
          formAction = "/manager/userManagement/security";
          formId = "securityForm";
          if (data._id) {
            formTitle = "Edit Security";
            document.getElementById("Sid").value = data._id;
            document.getElementById("securityName").value = data.name || "";
            document.getElementById("securityEmail").value = data.email || "";
            document.getElementById("securityContact").value =
              data.contact || "";
            document.getElementById("securityAddress").value =
              data.address || "";
            document.getElementById("securityShift").value = data.Shift || "";
            document.getElementById("gate").value = data.workplace || "";
          } else {
            document.getElementById("Sid").value = "";
            document.getElementById("securityForm").reset();
          }
        } else if (formType === "worker") {
          formPopupId = "workerFormPopup";
          formTitle = "Add Worker";
          formAction = "/manager/userManagement/worker";
          formId = "workerForm";
          if (data._id) {
            formTitle = "Edit Worker";
            document.getElementById("Wid").value = data._id;
            document.getElementById("workerName").value = data.name || "";
            document.getElementById("workerEmail").value = data.email || "";
            document.getElementById("workerJobRole").value = data.jobRole || "";
            document.getElementById("workerContact").value = data.contact || "";
            document.getElementById("workerAddress").value = data.address || "";
            document.getElementById("workerSalary").value = data.salary || "";
            document.getElementById("workerAvailabilityStatus").value =
              data.availabilityStatus || "Available";
          } else {
            document.getElementById("Wid").value = "";
            document.getElementById("workerForm").reset();
          }
        }

        document.getElementById(formPopupId).style.display = "flex";
        document
          .getElementById(formId)
          .querySelector(".form-title").textContent = formTitle;
        document.getElementById(formId).action = formAction;
      }

      // Close the form popup
      function closeForm(formType) {
        if (formType === "resident") {
          document.getElementById("residentFormPopup").style.display = "none";
        } else if (formType === "security") {
          document.getElementById("securityFormPopup").style.display = "none";
        } else if (formType === "worker") {
          document.getElementById("workerFormPopup").style.display = "none";
        }
      }

      // Show/hide tabs
      function showTab(tabId) {
        const tabs = document.querySelectorAll(".cards-container");
        tabs.forEach((tab) => {
          tab.style.display = "none";
        });

        const activeTab = document.getElementById(tabId);
        if (activeTab) {
          activeTab.style.display = "block";
        }

        const tabButtons = document.querySelectorAll(".tab-btn");
        tabButtons.forEach((btn) => {
          btn.classList.remove("active");
        });

        document
          .querySelector(`.tab-btn[onclick="showTab('${tabId}')"]`)
          .classList.add("active");
      }

      document.addEventListener("DOMContentLoaded", function () {
        // Initial tab display
        showTab("residents");

        // Add Resident Button
        document
          .getElementById("addResidentBtn")
          .addEventListener("click", function () {
            openForm("resident");
          });

        // Add Security Button
        document
          .getElementById("addSecurityBtn")
          .addEventListener("click", function () {
            openForm("security");
          });

        // Add Worker Button
        document
          .getElementById("addWorkerBtn")
          .addEventListener("click", function () {
            openForm("worker");
          });

        // Event delegation for Edit and Delete buttons on cards
        const cardGrids = document.querySelectorAll(".card-grid");

        cardGrids.forEach((grid) => {
          grid.addEventListener("click", async function (event) {
            const editBtn = event.target.closest(".action-btn.edit");
            const deleteBtn = event.target.closest(".action-btn.delete");
            const card = event.target.closest(".info-card");

            if (!card) return; // Click was not on a card

            const id = card.getAttribute("data-id");
            let formType = "";
            let endpoint = "";

            if (card.parentElement.id === "residentCardGrid") {
              formType = "resident";
              endpoint = `/manager/userManagement/resident/${id}`;
            } else if (card.parentElement.id === "securityCardGrid") {
              formType = "security";
              endpoint = `/manager/userManagement/security/${id}`;
            } else if (card.parentElement.id === "workerCardGrid") {
              formType = "worker";
              endpoint = `/manager/userManagement/worker/${id}`;
            }

            if (editBtn) {
              try {
                const response = await fetch(endpoint, {
                  method: "GET",
                  headers: {
                    "Content-Type": "application/json",
                  },
                });
                const data = await response.json();
                if (response.ok) {
                  openForm(formType, data);
                } else {
                  alert(data.error || `Failed to fetch ${formType} data.`);
                }
              } catch (error) {
                console.error(`Error fetching ${formType} data:`, error);
                alert(`An error occurred while fetching ${formType} details.`);
              }
            } else if (deleteBtn) {
              if (
                confirm(`Are you sure you want to delete this ${formType}?`)
              ) {
                try {
                  const response = await fetch(endpoint, {
                    method: "DELETE",
                  });
                  const result = await response.json();
                  if (response.ok) {
                    alert(
                      `${
                        formType.charAt(0).toUpperCase() + formType.slice(1)
                      } deleted successfully!`
                    );
                    card.remove(); // Remove the card from the DOM
                  } else {
                    alert(result.error || `Failed to delete ${formType}.`);
                  }
                } catch (error) {
                  console.error(`Error deleting ${formType}:`, error);
                  alert(`Error deleting ${formType}. Please try again.`);
                }
              }
            }
          });
        });

        // Advertisement slider functionality
        
      });
    </script>
    <script src="../../js/sidebar.js"></script>
  </body>
</html>
