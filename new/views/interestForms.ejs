<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Community & Manager Registration</title>

    <style>
        /* Common Font Face */
        @font-face {
            font-family: 'MyFont';
            src: url('../imgs/Poppins/Poppins-Medium.ttf') format('woff2');
            font-weight: normal;
            font-style: normal;
        }

        /* Universal Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'MyFont', 'Inter', sans-serif;
        }

        /* Body Styling */
        body {
            background-color: #f5f5f5;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow-y: auto;
        }

        /* Alert Styling */
        .alert {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            min-width: 250px;
            max-width: 500px;
            padding: 15px 40px 15px 20px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            text-align: center;
            z-index: 9999;
            color: #fff;
            display: none;
            opacity: 0;
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

        .alert.show {
            display: block;
            opacity: 1;
            animation: slideDown 0.3s ease;
        }

        .alert.success {
            background-color: #4CAF50;
        }

        .alert.error {
            background-color: #f44336;
        }

        .alert .close-btn {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            background: transparent;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            padding: 0;
            width: 25px;
            height: 25px;
            line-height: 1;
        }

        .alert .close-btn:hover {
            opacity: 0.8;
        }

        @keyframes slideDown {
            from {
                transform: translate(-50%, -20px);
                opacity: 0;
            }
            to {
                transform: translate(-50%, 0);
                opacity: 1;
            }
        }

        /* Main Container */
        .container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            max-width: 1200px;
            width: 95%;
            height: auto;
            padding: 40px;
        }

        /* Header */
        .header {
            text-align: center;
            margin-bottom: 20px;
        }

        .header h2 {
            font-size: 2.2em;
            color: #333;
            margin-bottom: 5px;
        }

        .header .subtitle {
            font-size: 1em;
            color: #666;
        }

        /* Form Content Layout */
        .form-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 25px;
            flex: 1;
        }

        /* Form Panels */
        .form-panel {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 25px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            display: flex;
            flex-direction: column;
            height: fit-content;
        }

        /* Form Section Titles */
        .form-section-title {
            font-size: 1.1em;
            font-weight: 600;
            color: #2c4b7c;
            margin-top: 0;
            margin-bottom: 15px;
            padding-bottom: 5px;
            border-bottom: 2px solid #e9ecef;
        }

        /* Form Rows and Groups */
        .form-row {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
        }

        .form-group {
            flex: 1;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #262525;
            font-size: 0.85em;
        }

        /* Input Fields */
        input,
        textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            box-sizing: border-box;
            background: #fff;
            transition: border-color 0.3s;
        }

        input:focus,
        textarea:focus {
            outline: none;
            border-color: #3b44f0;
        }

        textarea {
            resize: vertical;
            min-height: 80px;
        }

        /* Photo Upload Styling */
        .photo-upload-area {
            border: 2px dashed #ddd;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            transition: border-color 0.3s;
            margin-bottom: 15px;
        }

        .photo-upload-area:hover {
            border-color: #6a93cb;
        }

        .photo-upload-area img {
            width: 40px;
            height: 40px;
            opacity: 0.6;
            margin-bottom: 10px;
        }

        .photo-preview-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            gap: 10px;
        }

        .photo-preview {
            position: relative;
            width: 100%;
            padding-top: 100%;
            background-color: #e9e9e9;
            border-radius: 8px;
            overflow: hidden;
        }

        .photo-preview img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .photo-remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(0, 0, 0, 0.5);
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            font-size: 14px;
            cursor: pointer;
        }

        /* Footer and Links */
        .form-footer {
            text-align: center;
            margin-top: 20px;
        }

        .submit-btn {
            width: 100%;
            padding: 12px;
            background-color: #ec3636;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .submit-btn:hover {
            background-color: #f33918;
        }

        .login-link {
            text-align: center;
            margin-top: 15px;
        }

        .login-link a {
            font-size: 0.9em;
            color: #2c4b7c;
            text-decoration: none;
            font-weight: 500;
        }

        .login-link a:hover {
            text-decoration: underline;
        }

        /* Responsive Design */
        @media (max-width: 900px) {
            .form-content {
                grid-template-columns: 1fr;
            }

            .form-row {
                flex-direction: column;
                gap: 0;
            }

            .container {
                padding: 20px;
            }
        }
    </style>
</head>

<body>
    <!-- Alert Box -->
    <div id="alertBox" class="alert">
        <span id="alertMessage"></span>
        <button class="close-btn" onclick="hideAlert()">&times;</button>
    </div>

    <div class="container">
        <form id="combinedForm" method="POST" enctype="multipart/form-data">
            <div class="header">
                <h2>Community & Manager Registration</h2>
                <p class="subtitle">Tell us about yourself and the community you manage</p>
            </div>

            <div class="form-content">
                <!-- Panel 1: Personal Information -->
                <div class="form-panel">
                    <h3 class="form-section-title">Personal Information</h3>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="firstName">First Name *</label>
                            <input type="text" id="firstName" name="firstName" required>
                        </div>
                        <div class="form-group">
                            <label for="lastName">Last Name *</label>
                            <input type="text" id="lastName" name="lastName" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="email">Email Address *</label>
                            <input type="email" id="email" name="email" required>
                        </div>
                        <div class="form-group">
                            <label for="phone">Phone Number *</label>
                            <input type="tel" id="phone" name="phone" required>
                        </div>
                    </div>
                </div>

                <!-- Panel 2: Community Details and Photos -->
                <div class="form-panel">
                    <h3 class="form-section-title">Community Details</h3>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="communityName">Community Name *</label>
                            <input type="text" id="communityName" name="communityName" required>
                        </div>
                        <div class="form-group">
                            <label for="location">Location *</label>
                            <input type="text" id="location" name="location" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="description">Community Description *</label>
                        <textarea id="description" name="description" placeholder="A brief description of your community..." required></textarea>
                    </div>
                    
                    <!-- Photo Upload Section -->
                    <div class="form-group">
                        <label>Community Photos (Optional)</label>
                        <div class="photo-upload-area" onclick="document.getElementById('photoInput').click()">
                            <div>📷</div>
                            <p>Click to upload photos</p>
                            <p style="font-size: 0.8em; color: #666;">Upload up to 5 photos of your community</p>
                        </div>
                        <input type="file" id="photoInput" name="photos" multiple accept="image/*" style="display: none;">
                        <div id="photoPreviewGrid" class="photo-preview-grid" style="display: none;"></div>
                    </div>
                </div>
            </div>

            <!-- Footer -->
            <div class="form-footer">
                <button type="submit" class="submit-btn">Submit Application</button>
                <div class="login-link">
                    <a href="/login">Already have an account? Login here</a>
                </div>
            </div>
        </form>
    </div>

    <script>
        let selectedPhotos = [];

        // Alert Functions
        function showAlert(message, type = 'success', duration = 4000) {
            const alertBox = document.getElementById('alertBox');
            const alertMessage = document.getElementById('alertMessage');

            // Clear previous classes
            alertBox.className = 'alert';
            
            // Set message
            alertMessage.textContent = message;
            
            // Add appropriate type class
            alertBox.classList.add(type === 'success' ? 'success' : 'error');
            
            // Show alert
            alertBox.classList.add('show');

            // Auto-hide after duration
            setTimeout(() => {
                hideAlert();
            }, duration);
        }

        function hideAlert() {
            const alertBox = document.getElementById('alertBox');
            alertBox.classList.remove('show');
            
            // Wait for animation to complete before hiding
            setTimeout(() => {
                alertBox.style.display = 'none';
            }, 300);
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Photo upload handling
            const photoInput = document.getElementById('photoInput');
            const photoPreviewGrid = document.getElementById('photoPreviewGrid');

            photoInput.addEventListener('change', function(e) {
                const files = Array.from(e.target.files);
                
                // Limit to 5 photos
                if (selectedPhotos.length + files.length > 5) {
                    showAlert('You can upload a maximum of 5 photos.', 'error');
                    return;
                }

                files.forEach(file => {
                    if (file.type.startsWith('image/')) {
                        selectedPhotos.push(file);
                        displayPhoto(file);
                    }
                });

                updatePhotoPreviewVisibility();
            });

            function displayPhoto(file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const photoDiv = document.createElement('div');
                    photoDiv.className = 'photo-preview';
                    photoDiv.innerHTML = `
                        <img src="${e.target.result}" alt="Preview">
                        <button type="button" class="photo-remove-btn" onclick="removePhoto('${file.name}')">&times;</button>
                    `;
                    photoPreviewGrid.appendChild(photoDiv);
                };
                reader.readAsDataURL(file);
            }

            function updatePhotoPreviewVisibility() {
                photoPreviewGrid.style.display = selectedPhotos.length > 0 ? 'grid' : 'none';
            }

            // Make removePhoto function global
            window.removePhoto = function(fileName) {
                selectedPhotos = selectedPhotos.filter(photo => photo.name !== fileName);
                
                // Remove the preview element
                const previews = photoPreviewGrid.querySelectorAll('.photo-preview');
                previews.forEach(preview => {
                    const img = preview.querySelector('img');
                    if (img && img.alt === 'Preview') {
                        preview.remove();
                    }
                });
                
                updatePhotoPreviewVisibility();
            };

            // Form submission logic
            document.getElementById('combinedForm').addEventListener('submit', function(e) {
                e.preventDefault();

                // Get form values
                const firstName = document.getElementById('firstName').value.trim();
                const lastName = document.getElementById('lastName').value.trim();
                const email = document.getElementById('email').value.trim();
                const phone = document.getElementById('phone').value.trim();
                const communityName = document.getElementById('communityName').value.trim();
                const location = document.getElementById('location').value.trim();
                const description = document.getElementById('description').value.trim();

                // Validation
                if (!firstName || !lastName || !email || !phone || !communityName || !location || !description) {
                    showAlert('Please fill in all required fields.', 'error');
                    return;
                }

                // Email validation
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(email)) {
                    showAlert('Please enter a valid email address.', 'error');
                    return;
                }

                const phoneRegex = /^\d{10}$/;
                if (!phoneRegex.test(phone)) {
                        showAlert('Please enter a valid 10-digit phone number.', 'error');
                    return;
                }

                // Prepare FormData
                const formData = new FormData();
                formData.append('firstName', firstName);
                formData.append('lastName', lastName);
                formData.append('email', email);
                formData.append('phone', phone);
                formData.append('communityName', communityName);
                formData.append('location', location);
                formData.append('description', description);

                // Append photos
                selectedPhotos.forEach(photo => {
                    formData.append('photos', photo);
                });

                // Submit form
                fetch('/interest/submit', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => { 
                            throw new Error(err.message || 'Server error'); 
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Success:', data);
                    showAlert('Application submitted successfully! We will review your request.', 'success');
                    // Reset form
                    document.getElementById('combinedForm').reset();
                    selectedPhotos = [];
                    photoPreviewGrid.innerHTML = '';
                    updatePhotoPreviewVisibility();
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('Error submitting application: ' + error.message, 'error');
                });
            });
        });
    </script>
</body>

</html>